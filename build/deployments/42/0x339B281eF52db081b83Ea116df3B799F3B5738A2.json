{"abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "address", "name": "beneficiary", "type": "address"}, {"internalType": "uint256", "name": "timeUntilRelease", "type": "uint256"}], "name": "addBeneficiary", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "beneficiaries", "outputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "releaseDate", "type": "uint256"}, {"internalType": "bool", "name": "paid", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "grantor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "withdrawFunds", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "contracts/Trust.sol"}, "ast": {"absolutePath": "contracts/Trust.sol", "exportedSymbols": {"Trust": [118]}, "id": 119, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "33:23:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "Trust", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 118, "linearizedBaseContracts": [118], "name": "Trust", "nameLocation": "67:5:0", "nodeType": "ContractDefinition", "nodes": [{"canonicalName": "Trust.Beneficiary", "id": 8, "members": [{"constant": false, "id": 3, "mutability": "mutable", "name": "amount", "nameLocation": "116:6:0", "nodeType": "VariableDeclaration", "scope": 8, "src": "108:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "108:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5, "mutability": "mutable", "name": "releaseDate", "nameLocation": "140:11:0", "nodeType": "VariableDeclaration", "scope": 8, "src": "132:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "132:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7, "mutability": "mutable", "name": "paid", "nameLocation": "166:4:0", "nodeType": "VariableDeclaration", "scope": 8, "src": "161:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 6, "name": "bool", "nodeType": "ElementaryTypeName", "src": "161:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "Beneficiary", "nameLocation": "86:11:0", "nodeType": "StructDefinition", "scope": 118, "src": "79:98:0", "visibility": "public"}, {"constant": false, "functionSelector": "01567739", "id": 13, "mutability": "mutable", "name": "beneficiaries", "nameLocation": "221:13:0", "nodeType": "VariableDeclaration", "scope": 118, "src": "182:52:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$8_storage_$", "typeString": "mapping(address => struct Trust.Beneficiary)"}, "typeName": {"id": 12, "keyType": {"id": 9, "name": "address", "nodeType": "ElementaryTypeName", "src": "190:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "182:31:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$8_storage_$", "typeString": "mapping(address => struct Trust.Beneficiary)"}, "valueType": {"id": 11, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 10, "name": "Beneficiary", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "201:11:0"}, "referencedDeclaration": 8, "src": "201:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage_ptr", "typeString": "struct Trust.Beneficiary"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "bab253b3", "id": 15, "mutability": "mutable", "name": "grantor", "nameLocation": "255:7:0", "nodeType": "VariableDeclaration", "scope": 118, "src": "240:22:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 14, "name": "address", "nodeType": "ElementaryTypeName", "src": "240:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"body": {"id": 23, "nodeType": "Block", "src": "283:37:0", "statements": [{"expression": {"id": 21, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 18, "name": "grantor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "293:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 19, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "303:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 20, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "303:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "293:20:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 22, "nodeType": "ExpressionStatement", "src": "293:20:0"}]}, "id": 24, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 16, "nodeType": "ParameterList", "parameters": [], "src": "280:2:0"}, "returnParameters": {"id": 17, "nodeType": "ParameterList", "parameters": [], "src": "283:0:0"}, "scope": 118, "src": "269:51:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 63, "nodeType": "Block", "src": "434:447:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 35, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 32, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "465:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 33, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "465:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 34, "name": "grantor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "479:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "465:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c7920746865206772616e746f72206f6620746869732074727573742063616e2061646420612062656e656669636961727921", "id": 36, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "500:55:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_642964505935395e7bffffae40f10b69635b539bc18d57ed51457be4dc85af3d", "typeString": "literal_string \"Only the grantor of this trust can add a beneficiary!\""}, "value": "Only the grantor of this trust can add a beneficiary!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_642964505935395e7bffffae40f10b69635b539bc18d57ed51457be4dc85af3d", "typeString": "literal_string \"Only the grantor of this trust can add a beneficiary!\""}], "id": 31, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "444:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 37, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "444:121:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 38, "nodeType": "ExpressionStatement", "src": "444:121:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 45, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 40, "name": "beneficiaries", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "596:13:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$8_storage_$", "typeString": "mapping(address => struct Trust.Beneficiary storage ref)"}}, "id": 42, "indexExpression": {"id": 41, "name": "beneficiary", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "610:11:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "596:26:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage", "typeString": "struct Trust.Beneficiary storage ref"}}, "id": 43, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 3, "src": "596:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 44, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "633:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "596:38:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f7527766520616c726561647920616464656420746869732062656e65666963696172792e2e2e757365206120646966666572656e74206164647265737321", "id": 46, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "648:66:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_798ae6156fdd2d5c79635dc932180cc554afc3c0df6fa82910d4ec3ba743b7ff", "typeString": "literal_string \"You've already added this beneficiary...use a different address!\""}, "value": "You've already added this beneficiary...use a different address!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_798ae6156fdd2d5c79635dc932180cc554afc3c0df6fa82910d4ec3ba743b7ff", "typeString": "literal_string \"You've already added this beneficiary...use a different address!\""}], "id": 39, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "575:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 47, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "575:149:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 48, "nodeType": "ExpressionStatement", "src": "575:149:0"}, {"expression": {"id": 61, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 49, "name": "beneficiaries", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "734:13:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$8_storage_$", "typeString": "mapping(address => struct Trust.Beneficiary storage ref)"}}, "id": 51, "indexExpression": {"id": 50, "name": "beneficiary", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "748:11:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "734:26:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage", "typeString": "struct Trust.Beneficiary storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 53, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "788:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 54, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "788:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 58, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 55, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "811:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 56, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "811:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 57, "name": "timeUntilRelease", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "829:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "811:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 59, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "859:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 52, "name": "Beneficiary", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "763:11:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Beneficiary_$8_storage_ptr_$", "typeString": "type(struct Trust.Beneficiary storage pointer)"}}, "id": 60, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "763:111:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_memory_ptr", "typeString": "struct Trust.Beneficiary memory"}}, "src": "734:140:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage", "typeString": "struct Trust.Beneficiary storage ref"}}, "id": 62, "nodeType": "ExpressionStatement", "src": "734:140:0"}]}, "functionSelector": "96074e70", "id": 64, "implemented": true, "kind": "function", "modifiers": [], "name": "addBeneficiary", "nameLocation": "335:14:0", "nodeType": "FunctionDefinition", "parameters": {"id": 29, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 26, "mutability": "mutable", "name": "beneficiary", "nameLocation": "358:11:0", "nodeType": "VariableDeclaration", "scope": 64, "src": "350:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 25, "name": "address", "nodeType": "ElementaryTypeName", "src": "350:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 28, "mutability": "mutable", "name": "timeUntilRelease", "nameLocation": "379:16:0", "nodeType": "VariableDeclaration", "scope": 64, "src": "371:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 27, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "371:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "349:47:0"}, "returnParameters": {"id": 30, "nodeType": "ParameterList", "parameters": [], "src": "434:0:0"}, "scope": 118, "src": "326:555:0", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 116, "nodeType": "Block", "src": "921:557:0", "statements": [{"assignments": [69], "declarations": [{"constant": false, "id": 69, "mutability": "mutable", "name": "beneficiary", "nameLocation": "951:11:0", "nodeType": "VariableDeclaration", "scope": 116, "src": "931:31:0", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage_ptr", "typeString": "struct Trust.Beneficiary"}, "typeName": {"id": 68, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 67, "name": "Beneficiary", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "931:11:0"}, "referencedDeclaration": 8, "src": "931:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage_ptr", "typeString": "struct Trust.Beneficiary"}}, "visibility": "internal"}], "id": 74, "initialValue": {"baseExpression": {"id": 70, "name": "beneficiaries", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "965:13:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Beneficiary_$8_storage_$", "typeString": "mapping(address => struct Trust.Beneficiary storage ref)"}}, "id": 73, "indexExpression": {"expression": {"id": 71, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "979:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 72, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "979:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "965:25:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage", "typeString": "struct Trust.Beneficiary storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "931:59:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 80, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 76, "name": "beneficiary", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1021:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage_ptr", "typeString": "struct Trust.Beneficiary storage pointer"}}, "id": 77, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "releaseDate", "nodeType": "MemberAccess", "referencedDeclaration": 5, "src": "1021:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"id": 78, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1048:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 79, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "1048:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1021:42:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f752063616e277420776974686472617720756e74696c20796f75722072656c656173652064617465", "id": 81, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1077:44:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c007d4358d53b636dc80ca558d870c398611375085d1d049f429a3f1dccd3547", "typeString": "literal_string \"You can't withdraw until your release date\""}, "value": "You can't withdraw until your release date"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c007d4358d53b636dc80ca558d870c398611375085d1d049f429a3f1dccd3547", "typeString": "literal_string \"You can't withdraw until your release date\""}], "id": 75, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1000:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 82, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1000:131:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 83, "nodeType": "ExpressionStatement", "src": "1000:131:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 85, "name": "beneficiary", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1162:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage_ptr", "typeString": "struct Trust.Beneficiary storage pointer"}}, "id": 86, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 3, "src": "1162:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 87, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1183:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1162:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c7920612062656e65666963696172792063616e2077697468647261772066756e64732066726f6d2074686973207472757374", "id": 89, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1198:55:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f7523d7666f7d10266de8a83e5c99d5f140298ec60b7f5e47c2419c30021cd7d", "typeString": "literal_string \"Only a beneficiary can withdraw funds from this trust\""}, "value": "Only a beneficiary can withdraw funds from this trust"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f7523d7666f7d10266de8a83e5c99d5f140298ec60b7f5e47c2419c30021cd7d", "typeString": "literal_string \"Only a beneficiary can withdraw funds from this trust\""}], "id": 84, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1141:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 90, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1141:122:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 91, "nodeType": "ExpressionStatement", "src": "1141:122:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 96, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 93, "name": "beneficiary", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1294:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage_ptr", "typeString": "struct Trust.Beneficiary storage pointer"}}, "id": 94, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "paid", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "1294:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "66616c7365", "id": 95, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1314:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "1294:25:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f7527766520616c726561647920776974686472657720796f75722066756e647321", "id": 97, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1333:37:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_288cb02c6a80d9f24aa61ad0914d61721cc29b7b36fb5f9a68023af6c99fda41", "typeString": "literal_string \"You've already withdrew your funds!\""}, "value": "You've already withdrew your funds!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_288cb02c6a80d9f24aa61ad0914d61721cc29b7b36fb5f9a68023af6c99fda41", "typeString": "literal_string \"You've already withdrew your funds!\""}], "id": 92, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1273:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 98, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1273:107:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 99, "nodeType": "ExpressionStatement", "src": "1273:107:0"}, {"expression": {"id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 100, "name": "beneficiary", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1390:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage_ptr", "typeString": "struct Trust.Beneficiary storage pointer"}}, "id": 102, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "paid", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "1390:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 103, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1409:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "1390:23:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 105, "nodeType": "ExpressionStatement", "src": "1390:23:0"}, {"expression": {"arguments": [{"expression": {"id": 112, "name": "beneficiary", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1452:11:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Beneficiary_$8_storage_ptr", "typeString": "struct Trust.Beneficiary storage pointer"}}, "id": 113, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 3, "src": "1452:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 108, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1431:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 109, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1431:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 107, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1423:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 106, "name": "address", "nodeType": "ElementaryTypeName", "src": "1423:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 110, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1423:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 111, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "1423:28:0", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 114, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1423:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 115, "nodeType": "ExpressionStatement", "src": "1423:48:0"}]}, "functionSelector": "24600fc3", "id": 117, "implemented": true, "kind": "function", "modifiers": [], "name": "withdrawFunds", "nameLocation": "896:13:0", "nodeType": "FunctionDefinition", "parameters": {"id": 65, "nodeType": "ParameterList", "parameters": [], "src": "909:2:0"}, "returnParameters": {"id": 66, "nodeType": "ParameterList", "parameters": [], "src": "921:0:0"}, "scope": 118, "src": "887:591:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 119, "src": "58:1422:0", "usedErrors": []}], "src": "33:1448:0"}, "bytecode": "608060405234801561001057600080fd5b50600180546001600160a01b031916331790556104c1806100326000396000f3fe60806040526004361061003f5760003560e01c8063015677391461004457806324600fc3146100a557806396074e70146100bc578063bab253b3146100cf575b600080fd5b34801561005057600080fd5b5061008361005f366004610419565b60006020819052908152604090208054600182015460029092015490919060ff1683565b6040805193845260208401929092521515908201526060015b60405180910390f35b3480156100b157600080fd5b506100ba610107565b005b6100ba6100ca36600461043b565b61028f565b3480156100db57600080fd5b506001546100ef906001600160a01b031681565b6040516001600160a01b03909116815260200161009c565b33600090815260208190526040902060018101544210156101825760405162461bcd60e51b815260206004820152602a60248201527f596f752063616e277420776974686472617720756e74696c20796f75722072656044820152696c65617365206461746560b01b60648201526084015b60405180910390fd5b80546101ee5760405162461bcd60e51b815260206004820152603560248201527f4f6e6c7920612062656e65666963696172792063616e20776974686472617720604482015274199d5b991cc8199c9bdb481d1a1a5cc81d1c9d5cdd605a1b6064820152608401610179565b600281015460ff161561024f5760405162461bcd60e51b815260206004820152602360248201527f596f7527766520616c726561647920776974686472657720796f75722066756e60448201526264732160e81b6064820152608401610179565b60028101805460ff191660011790558054604051339180156108fc02916000818181858888f1935050505015801561028b573d6000803e3d6000fd5b5050565b6001546001600160a01b031633146103075760405162461bcd60e51b815260206004820152603560248201527f4f6e6c7920746865206772616e746f72206f6620746869732074727573742063604482015274616e2061646420612062656e65666963696172792160581b6064820152608401610179565b6001600160a01b03821660009081526020819052604090205415610395576040805162461bcd60e51b81526020600482015260248101919091527f596f7527766520616c726561647920616464656420746869732062656e65666960448201527f63696172792e2e2e757365206120646966666572656e742061646472657373216064820152608401610179565b604051806060016040528034815260200182426103b29190610465565b8152600060209182018190526001600160a01b03949094168452838152604093849020825181559082015160018201559201516002909201805460ff19169215159290921790915550565b80356001600160a01b038116811461041457600080fd5b919050565b60006020828403121561042b57600080fd5b610434826103fd565b9392505050565b6000806040838503121561044e57600080fd5b610457836103fd565b946020939093013593505050565b6000821982111561048657634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212207cbbd9763e5356620af837500320b15b33dcbadff41843c0696327a60b13677664736f6c634300080a0033", "bytecodeSha1": "2102da228bac229f44ec295a9019718f63b08c17", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "Trust", "coverageMap": {"branches": {"0": {"Trust.addBeneficiary": {"10": [465, 486, true], "11": [596, 634, true]}, "Trust.withdrawFunds": {"8": [1021, 1063, true], "9": [1294, 1319, true]}}}, "statements": {"0": {"Trust.addBeneficiary": {"5": [444, 565], "6": [575, 724], "7": [734, 874]}, "Trust.withdrawFunds": {"0": [1000, 1131], "1": [1141, 1263], "2": [1273, 1380], "3": [1390, 1413], "4": [1423, 1471]}}}}, "dependencies": [], "deployedBytecode": "60806040526004361061003f5760003560e01c8063015677391461004457806324600fc3146100a557806396074e70146100bc578063bab253b3146100cf575b600080fd5b34801561005057600080fd5b5061008361005f366004610419565b60006020819052908152604090208054600182015460029092015490919060ff1683565b6040805193845260208401929092521515908201526060015b60405180910390f35b3480156100b157600080fd5b506100ba610107565b005b6100ba6100ca36600461043b565b61028f565b3480156100db57600080fd5b506001546100ef906001600160a01b031681565b6040516001600160a01b03909116815260200161009c565b33600090815260208190526040902060018101544210156101825760405162461bcd60e51b815260206004820152602a60248201527f596f752063616e277420776974686472617720756e74696c20796f75722072656044820152696c65617365206461746560b01b60648201526084015b60405180910390fd5b80546101ee5760405162461bcd60e51b815260206004820152603560248201527f4f6e6c7920612062656e65666963696172792063616e20776974686472617720604482015274199d5b991cc8199c9bdb481d1a1a5cc81d1c9d5cdd605a1b6064820152608401610179565b600281015460ff161561024f5760405162461bcd60e51b815260206004820152602360248201527f596f7527766520616c726561647920776974686472657720796f75722066756e60448201526264732160e81b6064820152608401610179565b60028101805460ff191660011790558054604051339180156108fc02916000818181858888f1935050505015801561028b573d6000803e3d6000fd5b5050565b6001546001600160a01b031633146103075760405162461bcd60e51b815260206004820152603560248201527f4f6e6c7920746865206772616e746f72206f6620746869732074727573742063604482015274616e2061646420612062656e65666963696172792160581b6064820152608401610179565b6001600160a01b03821660009081526020819052604090205415610395576040805162461bcd60e51b81526020600482015260248101919091527f596f7527766520616c726561647920616464656420746869732062656e65666960448201527f63696172792e2e2e757365206120646966666572656e742061646472657373216064820152608401610179565b604051806060016040528034815260200182426103b29190610465565b8152600060209182018190526001600160a01b03949094168452838152604093849020825181559082015160018201559201516002909201805460ff19169215159290921790915550565b80356001600160a01b038116811461041457600080fd5b919050565b60006020828403121561042b57600080fd5b610434826103fd565b9392505050565b6000806040838503121561044e57600080fd5b610457836103fd565b946020939093013593505050565b6000821982111561048657634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212207cbbd9763e5356620af837500320b15b33dcbadff41843c0696327a60b13677664736f6c634300080a0033", "deployedSourceMap": "58:1422:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;182:52;;;;;;;;;;-1:-1:-1;182:52:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;579:25:1;;;635:2;620:18;;613:34;;;;690:14;683:22;663:18;;;656:50;567:2;552:18;182:52:0;;;;;;;;887:591;;;;;;;;;;;;;:::i;:::-;;326:555;;;;;;:::i;:::-;;:::i;240:22::-;;;;;;;;;;-1:-1:-1;240:22:0;;;;-1:-1:-1;;;;;240:22:0;;;;;;-1:-1:-1;;;;;1140:32:1;;;1122:51;;1110:2;1095:18;240:22:0;976:203:1;887:591:0;979:10;931:31;965:25;;;;;;;;;;1021:23;;;;1048:15;-1:-1:-1;1021:42:0;1000:131;;;;-1:-1:-1;;;1000:131:0;;1386:2:1;1000:131:0;;;1368:21:1;1425:2;1405:18;;;1398:30;1464:34;1444:18;;;1437:62;-1:-1:-1;;;1515:18:1;;;1508:40;1565:19;;1000:131:0;;;;;;;;;1162:18;;1141:122;;;;-1:-1:-1;;;1141:122:0;;1797:2:1;1141:122:0;;;1779:21:1;1836:2;1816:18;;;1809:30;1875:34;1855:18;;;1848:62;-1:-1:-1;;;1926:18:1;;;1919:51;1987:19;;1141:122:0;1595:417:1;1141:122:0;1294:16;;;;;;:25;1273:107;;;;-1:-1:-1;;;1273:107:0;;2219:2:1;1273:107:0;;;2201:21:1;2258:2;2238:18;;;2231:30;2297:34;2277:18;;;2270:62;-1:-1:-1;;;2348:18:1;;;2341:33;2391:19;;1273:107:0;2017:399:1;1273:107:0;1390:16;;;:23;;-1:-1:-1;;1390:23:0;1409:4;1390:23;;;1452:18;;1423:48;;1431:10;;1423:48;;;;;1390:16;1423:48;1390:16;1423:48;1452:18;1431:10;1423:48;;;;;;;;;;;;;;;;;;;;;921:557;887:591::o;326:555::-;479:7;;-1:-1:-1;;;;;479:7:0;465:10;:21;444:121;;;;-1:-1:-1;;;444:121:0;;2623:2:1;444:121:0;;;2605:21:1;2662:2;2642:18;;;2635:30;2701:34;2681:18;;;2674:62;-1:-1:-1;;;2752:18:1;;;2745:51;2813:19;;444:121:0;2421:417:1;444:121:0;-1:-1:-1;;;;;596:26:0;;:13;:26;;;;;;;;;;:33;:38;575:149;;;;;-1:-1:-1;;;575:149:0;;3045:2:1;575:149:0;;;3027:21:1;3064:18;;;3057:30;;;;3123:34;3103:18;;;3096:62;3194:34;3174:18;;;3167:62;3246:19;;575:149:0;2843:428:1;575:149:0;763:111;;;;;;;;788:9;763:111;;;;829:16;811:15;:34;;;;:::i;:::-;763:111;;859:5;763:111;;;;;;;-1:-1:-1;;;;;734:26:0;;;;;;;;;;;;;;:140;;;;;;;;763:111;734:140;;;;;;;;;;;;-1:-1:-1;;734:140:0;;;;;;;;;;;-1:-1:-1;326:555:0:o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;717:254::-;785:6;793;846:2;834:9;825:7;821:23;817:32;814:52;;;862:1;859;852:12;814:52;885:29;904:9;885:29;:::i;:::-;875:39;961:2;946:18;;;;933:32;;-1:-1:-1;;;717:254:1:o;3276:225::-;3316:3;3347:1;3343:6;3340:1;3337:13;3334:136;;;3392:10;3387:3;3383:20;3380:1;3373:31;3427:4;3424:1;3417:15;3455:4;3452:1;3445:15;3334:136;-1:-1:-1;3486:9:1;;3276:225::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {}, "version": 1}, "offset": [58, 1480], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1567739 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xBAB253B3 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x107 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x43B JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xEF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420776974686472617720756E74696C20796F7572207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6C656173652064617465 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920612062656E65666963696172792063616E20776974686472617720 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x199D5B991CC8199C9BDB481D1A1A5CC81D1C9D5CDD PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x179 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527766520616C726561647920776974686472657720796F75722066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x647321 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x179 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x28B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x307 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206772616E746F72206F6620746869732074727573742063 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x616E2061646420612062656E656669636961727921 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x179 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x395 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x596F7527766520616C726561647920616464656420746869732062656E656669 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63696172792E2E2E757365206120646966666572656E74206164647265737321 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD DUP3 TIMESTAMP PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE DUP4 DUP2 MSTORE PUSH1 0x40 SWAP4 DUP5 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x434 DUP3 PUSH2 0x3FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x457 DUP4 PUSH2 0x3FD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x486 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xBBD9763E5356620AF837500320B15B33DCBADFF41843C0696327A60B13 PUSH8 0x7664736F6C634300 ADDMOD EXP STOP CALLER ", "pcMap": {"0": {"offset": [58, 1480], "op": "PUSH1", "path": "0", "value": "0x80"}, "2": {"fn": null, "offset": [58, 1480], "op": "PUSH1", "path": "0", "value": "0x40"}, "4": {"fn": null, "offset": [58, 1480], "op": "MSTORE", "path": "0"}, "5": {"fn": null, "offset": [58, 1480], "op": "PUSH1", "path": "0", "value": "0x4"}, "7": {"fn": null, "offset": [58, 1480], "op": "CALLDATASIZE", "path": "0"}, "8": {"fn": null, "offset": [58, 1480], "op": "LT", "path": "0"}, "9": {"fn": null, "offset": [58, 1480], "op": "PUSH2", "path": "0", "value": "0x3F"}, "12": {"fn": null, "offset": [58, 1480], "op": "JUMPI", "path": "0"}, "13": {"fn": null, "offset": [58, 1480], "op": "PUSH1", "path": "0", "value": "0x0"}, "15": {"fn": null, "offset": [58, 1480], "op": "CALLDATALOAD", "path": "0"}, "16": {"fn": null, "offset": [58, 1480], "op": "PUSH1", "path": "0", "value": "0xE0"}, "18": {"fn": null, "offset": [58, 1480], "op": "SHR", "path": "0"}, "19": {"fn": null, "offset": [58, 1480], "op": "DUP1", "path": "0"}, "20": {"fn": null, "offset": [58, 1480], "op": "PUSH4", "path": "0", "value": "0x1567739"}, "25": {"fn": null, "offset": [58, 1480], "op": "EQ", "path": "0"}, "26": {"fn": null, "offset": [58, 1480], "op": "PUSH2", "path": "0", "value": "0x44"}, "29": {"fn": null, "offset": [58, 1480], "op": "JUMPI", "path": "0"}, "30": {"fn": null, "offset": [58, 1480], "op": "DUP1", "path": "0"}, "31": {"fn": null, "offset": [58, 1480], "op": "PUSH4", "path": "0", "value": "0x24600FC3"}, "36": {"fn": null, "offset": [58, 1480], "op": "EQ", "path": "0"}, "37": {"fn": null, "offset": [58, 1480], "op": "PUSH2", "path": "0", "value": "0xA5"}, "40": {"fn": null, "offset": [58, 1480], "op": "JUMPI", "path": "0"}, "41": {"fn": null, "offset": [58, 1480], "op": "DUP1", "path": "0"}, "42": {"fn": null, "offset": [58, 1480], "op": "PUSH4", "path": "0", "value": "0x96074E70"}, "47": {"fn": null, "offset": [58, 1480], "op": "EQ", "path": "0"}, "48": {"fn": null, "offset": [58, 1480], "op": "PUSH2", "path": "0", "value": "0xBC"}, "51": {"fn": null, "offset": [58, 1480], "op": "JUMPI", "path": "0"}, "52": {"fn": null, "offset": [58, 1480], "op": "DUP1", "path": "0"}, "53": {"fn": null, "offset": [58, 1480], "op": "PUSH4", "path": "0", "value": "0xBAB253B3"}, "58": {"fn": null, "offset": [58, 1480], "op": "EQ", "path": "0"}, "59": {"fn": null, "offset": [58, 1480], "op": "PUSH2", "path": "0", "value": "0xCF"}, "62": {"fn": null, "offset": [58, 1480], "op": "JUMPI", "path": "0"}, "63": {"fn": null, "offset": [58, 1480], "op": "JUMPDEST", "path": "0"}, "64": {"fn": null, "offset": [58, 1480], "op": "PUSH1", "path": "0", "value": "0x0"}, "66": {"fn": null, "offset": [58, 1480], "op": "DUP1", "path": "0"}, "67": {"first_revert": true, "fn": null, "offset": [58, 1480], "op": "REVERT", "path": "0"}, "68": {"offset": [182, 234], "op": "JUMPDEST", "path": "0"}, "69": {"fn": null, "offset": [182, 234], "op": "CALLVALUE", "path": "0"}, "70": {"fn": null, "offset": [182, 234], "op": "DUP1", "path": "0"}, "71": {"fn": null, "offset": [182, 234], "op": "ISZERO", "path": "0"}, "72": {"fn": null, "offset": [182, 234], "op": "PUSH2", "path": "0", "value": "0x50"}, "75": {"fn": null, "offset": [182, 234], "op": "JUMPI", "path": "0"}, "76": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x0"}, "78": {"fn": null, "offset": [182, 234], "op": "DUP1", "path": "0"}, "79": {"fn": null, "offset": [182, 234], "op": "REVERT", "path": "0"}, "80": {"fn": null, "offset": [182, 234], "op": "JUMPDEST", "path": "0"}, "81": {"op": "POP"}, "82": {"offset": [182, 234], "op": "PUSH2", "path": "0", "value": "0x83"}, "85": {"fn": null, "offset": [182, 234], "op": "PUSH2", "path": "0", "value": "0x5F"}, "88": {"fn": null, "offset": [182, 234], "op": "CALLDATASIZE", "path": "0"}, "89": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x4"}, "91": {"fn": null, "offset": [182, 234], "op": "PUSH2", "path": "0", "value": "0x419"}, "94": {"fn": null, "jump": "i", "offset": [182, 234], "op": "JUMP", "path": "0"}, "95": {"fn": null, "offset": [182, 234], "op": "JUMPDEST", "path": "0"}, "96": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x0"}, "98": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x20"}, "100": {"fn": null, "offset": [182, 234], "op": "DUP2", "path": "0"}, "101": {"fn": null, "offset": [182, 234], "op": "SWAP1", "path": "0"}, "102": {"fn": null, "offset": [182, 234], "op": "MSTORE", "path": "0"}, "103": {"fn": null, "offset": [182, 234], "op": "SWAP1", "path": "0"}, "104": {"fn": null, "offset": [182, 234], "op": "DUP2", "path": "0"}, "105": {"fn": null, "offset": [182, 234], "op": "MSTORE", "path": "0"}, "106": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x40"}, "108": {"fn": null, "offset": [182, 234], "op": "SWAP1", "path": "0"}, "109": {"fn": null, "offset": [182, 234], "op": "KECCAK256", "path": "0"}, "110": {"fn": null, "offset": [182, 234], "op": "DUP1", "path": "0"}, "111": {"fn": null, "offset": [182, 234], "op": "SLOAD", "path": "0"}, "112": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x1"}, "114": {"fn": null, "offset": [182, 234], "op": "DUP3", "path": "0"}, "115": {"fn": null, "offset": [182, 234], "op": "ADD", "path": "0"}, "116": {"fn": null, "offset": [182, 234], "op": "SLOAD", "path": "0"}, "117": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x2"}, "119": {"fn": null, "offset": [182, 234], "op": "SWAP1", "path": "0"}, "120": {"fn": null, "offset": [182, 234], "op": "SWAP3", "path": "0"}, "121": {"fn": null, "offset": [182, 234], "op": "ADD", "path": "0"}, "122": {"fn": null, "offset": [182, 234], "op": "SLOAD", "path": "0"}, "123": {"fn": null, "offset": [182, 234], "op": "SWAP1", "path": "0"}, "124": {"fn": null, "offset": [182, 234], "op": "SWAP2", "path": "0"}, "125": {"fn": null, "offset": [182, 234], "op": "SWAP1", "path": "0"}, "126": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0xFF"}, "128": {"fn": null, "offset": [182, 234], "op": "AND", "path": "0"}, "129": {"fn": null, "offset": [182, 234], "op": "DUP4", "path": "0"}, "130": {"fn": null, "offset": [182, 234], "op": "JUMP", "path": "0"}, "131": {"fn": null, "offset": [182, 234], "op": "JUMPDEST", "path": "0"}, "132": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x40"}, "134": {"fn": null, "offset": [182, 234], "op": "DUP1", "path": "0"}, "135": {"fn": null, "offset": [182, 234], "op": "MLOAD", "path": "0"}, "136": {"op": "SWAP4"}, "137": {"op": "DUP5"}, "138": {"op": "MSTORE"}, "139": {"op": "PUSH1", "value": "0x20"}, "141": {"op": "DUP5"}, "142": {"op": "ADD"}, "143": {"op": "SWAP3"}, "144": {"op": "SWAP1"}, "145": {"op": "SWAP3"}, "146": {"op": "MSTORE"}, "147": {"op": "ISZERO"}, "148": {"op": "ISZERO"}, "149": {"op": "SWAP1"}, "150": {"op": "DUP3"}, "151": {"op": "ADD"}, "152": {"op": "MSTORE"}, "153": {"op": "PUSH1", "value": "0x60"}, "155": {"op": "ADD"}, "156": {"offset": [182, 234], "op": "JUMPDEST", "path": "0"}, "157": {"fn": null, "offset": [182, 234], "op": "PUSH1", "path": "0", "value": "0x40"}, "159": {"fn": null, "offset": [182, 234], "op": "MLOAD", "path": "0"}, "160": {"fn": null, "offset": [182, 234], "op": "DUP1", "path": "0"}, "161": {"fn": null, "offset": [182, 234], "op": "SWAP2", "path": "0"}, "162": {"fn": null, "offset": [182, 234], "op": "SUB", "path": "0"}, "163": {"fn": null, "offset": [182, 234], "op": "SWAP1", "path": "0"}, "164": {"fn": null, "offset": [182, 234], "op": "RETURN", "path": "0"}, "165": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "JUMPDEST", "path": "0"}, "166": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "CALLVALUE", "path": "0"}, "167": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "DUP1", "path": "0"}, "168": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "ISZERO", "path": "0"}, "169": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "PUSH2", "path": "0", "value": "0xB1"}, "172": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "JUMPI", "path": "0"}, "173": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "PUSH1", "path": "0", "value": "0x0"}, "175": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "DUP1", "path": "0"}, "176": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "REVERT", "path": "0"}, "177": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "JUMPDEST", "path": "0"}, "178": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "POP", "path": "0"}, "179": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "PUSH2", "path": "0", "value": "0xBA"}, "182": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "PUSH2", "path": "0", "value": "0x107"}, "185": {"fn": "Trust.withdrawFunds", "jump": "i", "offset": [887, 1478], "op": "JUMP", "path": "0"}, "186": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "JUMPDEST", "path": "0"}, "187": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "STOP", "path": "0"}, "188": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "JUMPDEST", "path": "0"}, "189": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "PUSH2", "path": "0", "value": "0xBA"}, "192": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "PUSH2", "path": "0", "value": "0xCA"}, "195": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "CALLDATASIZE", "path": "0"}, "196": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "PUSH1", "path": "0", "value": "0x4"}, "198": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "PUSH2", "path": "0", "value": "0x43B"}, "201": {"fn": "Trust.addBeneficiary", "jump": "i", "offset": [326, 881], "op": "JUMP", "path": "0"}, "202": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "JUMPDEST", "path": "0"}, "203": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "PUSH2", "path": "0", "value": "0x28F"}, "206": {"fn": "Trust.addBeneficiary", "jump": "i", "offset": [326, 881], "op": "JUMP", "path": "0"}, "207": {"offset": [240, 262], "op": "JUMPDEST", "path": "0"}, "208": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "CALLVALUE", "path": "0"}, "209": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "DUP1", "path": "0"}, "210": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "ISZERO", "path": "0"}, "211": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "PUSH2", "path": "0", "value": "0xDB"}, "214": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "JUMPI", "path": "0"}, "215": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "PUSH1", "path": "0", "value": "0x0"}, "217": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "DUP1", "path": "0"}, "218": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "REVERT", "path": "0"}, "219": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "JUMPDEST", "path": "0"}, "220": {"op": "POP"}, "221": {"offset": [240, 262], "op": "PUSH1", "path": "0", "value": "0x1"}, "223": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "SLOAD", "path": "0"}, "224": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "PUSH2", "path": "0", "value": "0xEF"}, "227": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "SWAP1", "path": "0"}, "228": {"op": "PUSH1", "value": "0x1"}, "230": {"op": "PUSH1", "value": "0x1"}, "232": {"op": "PUSH1", "value": "0xA0"}, "234": {"op": "SHL"}, "235": {"op": "SUB"}, "236": {"offset": [240, 262], "op": "AND", "path": "0"}, "237": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "DUP2", "path": "0"}, "238": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "JUMP", "path": "0"}, "239": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "JUMPDEST", "path": "0"}, "240": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "PUSH1", "path": "0", "value": "0x40"}, "242": {"fn": "Trust.addBeneficiary", "offset": [240, 262], "op": "MLOAD", "path": "0"}, "243": {"op": "PUSH1", "value": "0x1"}, "245": {"op": "PUSH1", "value": "0x1"}, "247": {"op": "PUSH1", "value": "0xA0"}, "249": {"op": "SHL"}, "250": {"op": "SUB"}, "251": {"op": "SWAP1"}, "252": {"op": "SWAP2"}, "253": {"op": "AND"}, "254": {"op": "DUP2"}, "255": {"op": "MSTORE"}, "256": {"op": "PUSH1", "value": "0x20"}, "258": {"op": "ADD"}, "259": {"offset": [240, 262], "op": "PUSH2", "path": "0", "value": "0x9C"}, "262": {"op": "JUMP"}, "263": {"fn": "Trust.withdrawFunds", "offset": [887, 1478], "op": "JUMPDEST", "path": "0"}, "264": {"fn": "Trust.withdrawFunds", "offset": [979, 989], "op": "CALLER", "path": "0"}, "265": {"fn": "Trust.withdrawFunds", "offset": [931, 962], "op": "PUSH1", "path": "0", "value": "0x0"}, "267": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "SWAP1", "path": "0"}, "268": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "DUP2", "path": "0"}, "269": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "MSTORE", "path": "0"}, "270": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "PUSH1", "path": "0", "value": "0x20"}, "272": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "DUP2", "path": "0"}, "273": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "SWAP1", "path": "0"}, "274": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "MSTORE", "path": "0"}, "275": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "PUSH1", "path": "0", "value": "0x40"}, "277": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "SWAP1", "path": "0"}, "278": {"fn": "Trust.withdrawFunds", "offset": [965, 990], "op": "KECCAK256", "path": "0"}, "279": {"fn": "Trust.withdrawFunds", "offset": [1021, 1044], "op": "PUSH1", "path": "0", "statement": 0, "value": "0x1"}, "281": {"fn": "Trust.withdrawFunds", "offset": [1021, 1044], "op": "DUP2", "path": "0"}, "282": {"fn": "Trust.withdrawFunds", "offset": [1021, 1044], "op": "ADD", "path": "0"}, "283": {"fn": "Trust.withdrawFunds", "offset": [1021, 1044], "op": "SLOAD", "path": "0"}, "284": {"fn": "Trust.withdrawFunds", "offset": [1048, 1063], "op": "TIMESTAMP", "path": "0"}, "285": {"op": "LT"}, "286": {"branch": 8, "fn": "Trust.withdrawFunds", "offset": [1021, 1063], "op": "ISZERO", "path": "0"}, "287": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "PUSH2", "path": "0", "value": "0x182"}, "290": {"branch": 8, "fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "JUMPI", "path": "0"}, "291": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "PUSH1", "path": "0", "value": "0x40"}, "293": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "MLOAD", "path": "0"}, "294": {"op": "PUSH3", "value": "0x461BCD"}, "298": {"op": "PUSH1", "value": "0xE5"}, "300": {"op": "SHL"}, "301": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "DUP2", "path": "0"}, "302": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "MSTORE", "path": "0"}, "303": {"op": "PUSH1", "value": "0x20"}, "305": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "PUSH1", "path": "0", "value": "0x4"}, "307": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "DUP3", "path": "0"}, "308": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "ADD", "path": "0"}, "309": {"op": "MSTORE"}, "310": {"op": "PUSH1", "value": "0x2A"}, "312": {"op": "PUSH1", "value": "0x24"}, "314": {"op": "DUP3"}, "315": {"op": "ADD"}, "316": {"op": "MSTORE"}, "317": {"op": "PUSH32", "value": "0x596F752063616E277420776974686472617720756E74696C20796F7572207265"}, "350": {"op": "PUSH1", "value": "0x44"}, "352": {"op": "DUP3"}, "353": {"op": "ADD"}, "354": {"op": "MSTORE"}, "355": {"op": "PUSH10", "value": "0x6C656173652064617465"}, "366": {"op": "PUSH1", "value": "0xB0"}, "368": {"op": "SHL"}, "369": {"op": "PUSH1", "value": "0x64"}, "371": {"op": "DUP3"}, "372": {"op": "ADD"}, "373": {"op": "MSTORE"}, "374": {"op": "PUSH1", "value": "0x84"}, "376": {"op": "ADD"}, "377": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "JUMPDEST", "path": "0"}, "378": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "PUSH1", "path": "0", "value": "0x40"}, "380": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "MLOAD", "path": "0"}, "381": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "DUP1", "path": "0"}, "382": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "SWAP2", "path": "0"}, "383": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "SUB", "path": "0"}, "384": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "SWAP1", "path": "0"}, "385": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "REVERT", "optimizer_revert": true, "path": "0"}, "386": {"fn": "Trust.withdrawFunds", "offset": [1000, 1131], "op": "JUMPDEST", "path": "0"}, "387": {"fn": "Trust.withdrawFunds", "offset": [1162, 1180], "op": "DUP1", "path": "0", "statement": 1}, "388": {"fn": "Trust.withdrawFunds", "offset": [1162, 1180], "op": "SLOAD", "path": "0"}, "389": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "PUSH2", "path": "0", "value": "0x1EE"}, "392": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "JUMPI", "path": "0"}, "393": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "PUSH1", "path": "0", "value": "0x40"}, "395": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "MLOAD", "path": "0"}, "396": {"op": "PUSH3", "value": "0x461BCD"}, "400": {"op": "PUSH1", "value": "0xE5"}, "402": {"op": "SHL"}, "403": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "DUP2", "path": "0"}, "404": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "MSTORE", "path": "0"}, "405": {"op": "PUSH1", "value": "0x20"}, "407": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "PUSH1", "path": "0", "value": "0x4"}, "409": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "DUP3", "path": "0"}, "410": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "ADD", "path": "0"}, "411": {"op": "MSTORE"}, "412": {"op": "PUSH1", "value": "0x35"}, "414": {"op": "PUSH1", "value": "0x24"}, "416": {"op": "DUP3"}, "417": {"op": "ADD"}, "418": {"op": "MSTORE"}, "419": {"op": "PUSH32", "value": "0x4F6E6C7920612062656E65666963696172792063616E20776974686472617720"}, "452": {"op": "PUSH1", "value": "0x44"}, "454": {"op": "DUP3"}, "455": {"op": "ADD"}, "456": {"op": "MSTORE"}, "457": {"op": "PUSH21", "value": "0x199D5B991CC8199C9BDB481D1A1A5CC81D1C9D5CDD"}, "479": {"op": "PUSH1", "value": "0x5A"}, "481": {"op": "SHL"}, "482": {"op": "PUSH1", "value": "0x64"}, "484": {"op": "DUP3"}, "485": {"op": "ADD"}, "486": {"op": "MSTORE"}, "487": {"op": "PUSH1", "value": "0x84"}, "489": {"op": "ADD"}, "490": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "PUSH2", "path": "0", "value": "0x179"}, "493": {"op": "JUMP"}, "494": {"fn": "Trust.withdrawFunds", "offset": [1141, 1263], "op": "JUMPDEST", "path": "0"}, "495": {"fn": "Trust.withdrawFunds", "offset": [1294, 1310], "op": "PUSH1", "path": "0", "statement": 2, "value": "0x2"}, "497": {"fn": "Trust.withdrawFunds", "offset": [1294, 1310], "op": "DUP2", "path": "0"}, "498": {"fn": "Trust.withdrawFunds", "offset": [1294, 1310], "op": "ADD", "path": "0"}, "499": {"fn": "Trust.withdrawFunds", "offset": [1294, 1310], "op": "SLOAD", "path": "0"}, "500": {"fn": "Trust.withdrawFunds", "offset": [1294, 1310], "op": "PUSH1", "path": "0", "value": "0xFF"}, "502": {"fn": "Trust.withdrawFunds", "offset": [1294, 1310], "op": "AND", "path": "0"}, "503": {"branch": 9, "fn": "Trust.withdrawFunds", "offset": [1294, 1319], "op": "ISZERO", "path": "0"}, "504": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "PUSH2", "path": "0", "value": "0x24F"}, "507": {"branch": 9, "fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "JUMPI", "path": "0"}, "508": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "PUSH1", "path": "0", "value": "0x40"}, "510": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "MLOAD", "path": "0"}, "511": {"op": "PUSH3", "value": "0x461BCD"}, "515": {"op": "PUSH1", "value": "0xE5"}, "517": {"op": "SHL"}, "518": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "DUP2", "path": "0"}, "519": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "MSTORE", "path": "0"}, "520": {"op": "PUSH1", "value": "0x20"}, "522": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "PUSH1", "path": "0", "value": "0x4"}, "524": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "DUP3", "path": "0"}, "525": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "ADD", "path": "0"}, "526": {"op": "MSTORE"}, "527": {"op": "PUSH1", "value": "0x23"}, "529": {"op": "PUSH1", "value": "0x24"}, "531": {"op": "DUP3"}, "532": {"op": "ADD"}, "533": {"op": "MSTORE"}, "534": {"op": "PUSH32", "value": "0x596F7527766520616C726561647920776974686472657720796F75722066756E"}, "567": {"op": "PUSH1", "value": "0x44"}, "569": {"op": "DUP3"}, "570": {"op": "ADD"}, "571": {"op": "MSTORE"}, "572": {"op": "PUSH3", "value": "0x647321"}, "576": {"op": "PUSH1", "value": "0xE8"}, "578": {"op": "SHL"}, "579": {"op": "PUSH1", "value": "0x64"}, "581": {"op": "DUP3"}, "582": {"op": "ADD"}, "583": {"op": "MSTORE"}, "584": {"op": "PUSH1", "value": "0x84"}, "586": {"op": "ADD"}, "587": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "PUSH2", "path": "0", "value": "0x179"}, "590": {"op": "JUMP"}, "591": {"fn": "Trust.withdrawFunds", "offset": [1273, 1380], "op": "JUMPDEST", "path": "0"}, "592": {"fn": "Trust.withdrawFunds", "offset": [1390, 1406], "op": "PUSH1", "path": "0", "statement": 3, "value": "0x2"}, "594": {"fn": "Trust.withdrawFunds", "offset": [1390, 1406], "op": "DUP2", "path": "0"}, "595": {"fn": "Trust.withdrawFunds", "offset": [1390, 1406], "op": "ADD", "path": "0"}, "596": {"fn": "Trust.withdrawFunds", "offset": [1390, 1413], "op": "DUP1", "path": "0"}, "597": {"fn": "Trust.withdrawFunds", "offset": [1390, 1413], "op": "SLOAD", "path": "0"}, "598": {"op": "PUSH1", "value": "0xFF"}, "600": {"op": "NOT"}, "601": {"fn": "Trust.withdrawFunds", "offset": [1390, 1413], "op": "AND", "path": "0"}, "602": {"fn": "Trust.withdrawFunds", "offset": [1409, 1413], "op": "PUSH1", "path": "0", "value": "0x1"}, "604": {"fn": "Trust.withdrawFunds", "offset": [1390, 1413], "op": "OR", "path": "0"}, "605": {"fn": "Trust.withdrawFunds", "offset": [1390, 1413], "op": "SWAP1", "path": "0"}, "606": {"fn": "Trust.withdrawFunds", "offset": [1390, 1413], "op": "SSTORE", "path": "0"}, "607": {"fn": "Trust.withdrawFunds", "offset": [1452, 1470], "op": "DUP1", "path": "0", "statement": 4}, "608": {"fn": "Trust.withdrawFunds", "offset": [1452, 1470], "op": "SLOAD", "path": "0"}, "609": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "PUSH1", "path": "0", "value": "0x40"}, "611": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "MLOAD", "path": "0"}, "612": {"fn": "Trust.withdrawFunds", "offset": [1431, 1441], "op": "CALLER", "path": "0"}, "613": {"fn": "Trust.withdrawFunds", "offset": [1431, 1441], "op": "SWAP2", "path": "0"}, "614": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "DUP1", "path": "0"}, "615": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "ISZERO", "path": "0"}, "616": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "PUSH2", "path": "0", "value": "0x8FC"}, "619": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "MUL", "path": "0"}, "620": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "SWAP2", "path": "0"}, "621": {"fn": "Trust.withdrawFunds", "offset": [1390, 1406], "op": "PUSH1", "path": "0", "value": "0x0"}, "623": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "DUP2", "path": "0"}, "624": {"fn": "Trust.withdrawFunds", "offset": [1390, 1406], "op": "DUP2", "path": "0"}, "625": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "DUP2", "path": "0"}, "626": {"fn": "Trust.withdrawFunds", "offset": [1452, 1470], "op": "DUP6", "path": "0"}, "627": {"fn": "Trust.withdrawFunds", "offset": [1431, 1441], "op": "DUP9", "path": "0"}, "628": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "DUP9", "path": "0"}, "629": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "CALL", "path": "0"}, "630": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "SWAP4", "path": "0"}, "631": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "POP", "path": "0"}, "632": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "POP", "path": "0"}, "633": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "POP", "path": "0"}, "634": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "POP", "path": "0"}, "635": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "ISZERO", "path": "0"}, "636": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "DUP1", "path": "0"}, "637": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "ISZERO", "path": "0"}, "638": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "PUSH2", "path": "0", "value": "0x28B"}, "641": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "JUMPI", "path": "0"}, "642": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "RETURNDATASIZE", "path": "0"}, "643": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "PUSH1", "path": "0", "value": "0x0"}, "645": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "DUP1", "path": "0"}, "646": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "RETURNDATACOPY", "path": "0"}, "647": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "RETURNDATASIZE", "path": "0"}, "648": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "PUSH1", "path": "0", "value": "0x0"}, "650": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "REVERT", "path": "0"}, "651": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "JUMPDEST", "path": "0"}, "652": {"fn": "Trust.withdrawFunds", "offset": [1423, 1471], "op": "POP", "path": "0"}, "653": {"fn": "Trust.withdrawFunds", "offset": [921, 1478], "op": "POP", "path": "0"}, "654": {"fn": "Trust.withdrawFunds", "jump": "o", "offset": [887, 1478], "op": "JUMP", "path": "0"}, "655": {"fn": "Trust.addBeneficiary", "offset": [326, 881], "op": "JUMPDEST", "path": "0"}, "656": {"fn": "Trust.addBeneficiary", "offset": [479, 486], "op": "PUSH1", "path": "0", "statement": 5, "value": "0x1"}, "658": {"fn": "Trust.addBeneficiary", "offset": [479, 486], "op": "SLOAD", "path": "0"}, "659": {"op": "PUSH1", "value": "0x1"}, "661": {"op": "PUSH1", "value": "0x1"}, "663": {"op": "PUSH1", "value": "0xA0"}, "665": {"op": "SHL"}, "666": {"op": "SUB"}, "667": {"fn": "Trust.addBeneficiary", "offset": [479, 486], "op": "AND", "path": "0"}, "668": {"fn": "Trust.addBeneficiary", "offset": [465, 475], "op": "CALLER", "path": "0"}, "669": {"branch": 10, "fn": "Trust.addBeneficiary", "offset": [465, 486], "op": "EQ", "path": "0"}, "670": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "PUSH2", "path": "0", "value": "0x307"}, "673": {"branch": 10, "fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "JUMPI", "path": "0"}, "674": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "PUSH1", "path": "0", "value": "0x40"}, "676": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "MLOAD", "path": "0"}, "677": {"op": "PUSH3", "value": "0x461BCD"}, "681": {"op": "PUSH1", "value": "0xE5"}, "683": {"op": "SHL"}, "684": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "DUP2", "path": "0"}, "685": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "MSTORE", "path": "0"}, "686": {"op": "PUSH1", "value": "0x20"}, "688": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "PUSH1", "path": "0", "value": "0x4"}, "690": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "DUP3", "path": "0"}, "691": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "ADD", "path": "0"}, "692": {"op": "MSTORE"}, "693": {"op": "PUSH1", "value": "0x35"}, "695": {"op": "PUSH1", "value": "0x24"}, "697": {"op": "DUP3"}, "698": {"op": "ADD"}, "699": {"op": "MSTORE"}, "700": {"op": "PUSH32", "value": "0x4F6E6C7920746865206772616E746F72206F6620746869732074727573742063"}, "733": {"op": "PUSH1", "value": "0x44"}, "735": {"op": "DUP3"}, "736": {"op": "ADD"}, "737": {"op": "MSTORE"}, "738": {"op": "PUSH21", "value": "0x616E2061646420612062656E656669636961727921"}, "760": {"op": "PUSH1", "value": "0x58"}, "762": {"op": "SHL"}, "763": {"op": "PUSH1", "value": "0x64"}, "765": {"op": "DUP3"}, "766": {"op": "ADD"}, "767": {"op": "MSTORE"}, "768": {"op": "PUSH1", "value": "0x84"}, "770": {"op": "ADD"}, "771": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "PUSH2", "path": "0", "value": "0x179"}, "774": {"op": "JUMP"}, "775": {"fn": "Trust.addBeneficiary", "offset": [444, 565], "op": "JUMPDEST", "path": "0"}, "776": {"op": "PUSH1", "value": "0x1"}, "778": {"op": "PUSH1", "value": "0x1"}, "780": {"op": "PUSH1", "value": "0xA0"}, "782": {"op": "SHL"}, "783": {"op": "SUB"}, "784": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "DUP3", "path": "0", "statement": 6}, "785": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "AND", "path": "0"}, "786": {"fn": "Trust.addBeneficiary", "offset": [596, 609], "op": "PUSH1", "path": "0", "value": "0x0"}, "788": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "SWAP1", "path": "0"}, "789": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "DUP2", "path": "0"}, "790": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "MSTORE", "path": "0"}, "791": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "PUSH1", "path": "0", "value": "0x20"}, "793": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "DUP2", "path": "0"}, "794": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "SWAP1", "path": "0"}, "795": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "MSTORE", "path": "0"}, "796": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "PUSH1", "path": "0", "value": "0x40"}, "798": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "SWAP1", "path": "0"}, "799": {"fn": "Trust.addBeneficiary", "offset": [596, 622], "op": "KECCAK256", "path": "0"}, "800": {"fn": "Trust.addBeneficiary", "offset": [596, 629], "op": "SLOAD", "path": "0"}, "801": {"branch": 11, "fn": "Trust.addBeneficiary", "offset": [596, 634], "op": "ISZERO", "path": "0"}, "802": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "PUSH2", "path": "0", "value": "0x395"}, "805": {"branch": 11, "fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "JUMPI", "path": "0"}, "806": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "PUSH1", "path": "0", "value": "0x40"}, "808": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "DUP1", "path": "0"}, "809": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "MLOAD", "path": "0"}, "810": {"op": "PUSH3", "value": "0x461BCD"}, "814": {"op": "PUSH1", "value": "0xE5"}, "816": {"op": "SHL"}, "817": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "DUP2", "path": "0"}, "818": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "MSTORE", "path": "0"}, "819": {"op": "PUSH1", "value": "0x20"}, "821": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "PUSH1", "path": "0", "value": "0x4"}, "823": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "DUP3", "path": "0"}, "824": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "ADD", "path": "0"}, "825": {"op": "MSTORE"}, "826": {"op": "PUSH1", "value": "0x24"}, "828": {"op": "DUP2"}, "829": {"op": "ADD"}, "830": {"op": "SWAP2"}, "831": {"op": "SWAP1"}, "832": {"op": "SWAP2"}, "833": {"op": "MSTORE"}, "834": {"op": "PUSH32", "value": "0x596F7527766520616C726561647920616464656420746869732062656E656669"}, "867": {"op": "PUSH1", "value": "0x44"}, "869": {"op": "DUP3"}, "870": {"op": "ADD"}, "871": {"op": "MSTORE"}, "872": {"op": "PUSH32", "value": "0x63696172792E2E2E757365206120646966666572656E74206164647265737321"}, "905": {"op": "PUSH1", "value": "0x64"}, "907": {"op": "DUP3"}, "908": {"op": "ADD"}, "909": {"op": "MSTORE"}, "910": {"op": "PUSH1", "value": "0x84"}, "912": {"op": "ADD"}, "913": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "PUSH2", "path": "0", "value": "0x179"}, "916": {"op": "JUMP"}, "917": {"fn": "Trust.addBeneficiary", "offset": [575, 724], "op": "JUMPDEST", "path": "0"}, "918": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "PUSH1", "path": "0", "statement": 7, "value": "0x40"}, "920": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "MLOAD", "path": "0"}, "921": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "DUP1", "path": "0"}, "922": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "PUSH1", "path": "0", "value": "0x60"}, "924": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "ADD", "path": "0"}, "925": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "PUSH1", "path": "0", "value": "0x40"}, "927": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "MSTORE", "path": "0"}, "928": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "DUP1", "path": "0"}, "929": {"fn": "Trust.addBeneficiary", "offset": [788, 797], "op": "CALLVALUE", "path": "0"}, "930": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "DUP2", "path": "0"}, "931": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "MSTORE", "path": "0"}, "932": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "PUSH1", "path": "0", "value": "0x20"}, "934": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "ADD", "path": "0"}, "935": {"fn": "Trust.addBeneficiary", "offset": [829, 845], "op": "DUP3", "path": "0"}, "936": {"fn": "Trust.addBeneficiary", "offset": [811, 826], "op": "TIMESTAMP", "path": "0"}, "937": {"fn": "Trust.addBeneficiary", "offset": [811, 845], "op": "PUSH2", "path": "0", "value": "0x3B2"}, "940": {"fn": "Trust.addBeneficiary", "offset": [811, 845], "op": "SWAP2", "path": "0"}, "941": {"fn": "Trust.addBeneficiary", "offset": [811, 845], "op": "SWAP1", "path": "0"}, "942": {"fn": "Trust.addBeneficiary", "offset": [811, 845], "op": "PUSH2", "path": "0", "value": "0x465"}, "945": {"fn": "Trust.addBeneficiary", "jump": "i", "offset": [811, 845], "op": "JUMP", "path": "0"}, "946": {"fn": "Trust.addBeneficiary", "offset": [811, 845], "op": "JUMPDEST", "path": "0"}, "947": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "DUP2", "path": "0"}, "948": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "MSTORE", "path": "0"}, "949": {"fn": "Trust.addBeneficiary", "offset": [859, 864], "op": "PUSH1", "path": "0", "value": "0x0"}, "951": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "PUSH1", "path": "0", "value": "0x20"}, "953": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "SWAP2", "path": "0"}, "954": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "DUP3", "path": "0"}, "955": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "ADD", "path": "0"}, "956": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "DUP2", "path": "0"}, "957": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "SWAP1", "path": "0"}, "958": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "MSTORE", "path": "0"}, "959": {"op": "PUSH1", "value": "0x1"}, "961": {"op": "PUSH1", "value": "0x1"}, "963": {"op": "PUSH1", "value": "0xA0"}, "965": {"op": "SHL"}, "966": {"op": "SUB"}, "967": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "SWAP5", "path": "0"}, "968": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "SWAP1", "path": "0"}, "969": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "SWAP5", "path": "0"}, "970": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "AND", "path": "0"}, "971": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "DUP5", "path": "0"}, "972": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "MSTORE", "path": "0"}, "973": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "DUP4", "path": "0"}, "974": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "DUP2", "path": "0"}, "975": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "MSTORE", "path": "0"}, "976": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "PUSH1", "path": "0", "value": "0x40"}, "978": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "SWAP4", "path": "0"}, "979": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "DUP5", "path": "0"}, "980": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "SWAP1", "path": "0"}, "981": {"fn": "Trust.addBeneficiary", "offset": [734, 760], "op": "KECCAK256", "path": "0"}, "982": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "DUP3", "path": "0"}, "983": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "MLOAD", "path": "0"}, "984": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "DUP2", "path": "0"}, "985": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SSTORE", "path": "0"}, "986": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP1", "path": "0"}, "987": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "DUP3", "path": "0"}, "988": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "ADD", "path": "0"}, "989": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "MLOAD", "path": "0"}, "990": {"fn": "Trust.addBeneficiary", "offset": [763, 874], "op": "PUSH1", "path": "0", "value": "0x1"}, "992": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "DUP3", "path": "0"}, "993": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "ADD", "path": "0"}, "994": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SSTORE", "path": "0"}, "995": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP3", "path": "0"}, "996": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "ADD", "path": "0"}, "997": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "MLOAD", "path": "0"}, "998": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "PUSH1", "path": "0", "value": "0x2"}, "1000": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP1", "path": "0"}, "1001": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP3", "path": "0"}, "1002": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "ADD", "path": "0"}, "1003": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "DUP1", "path": "0"}, "1004": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SLOAD", "path": "0"}, "1005": {"op": "PUSH1", "value": "0xFF"}, "1007": {"op": "NOT"}, "1008": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "AND", "path": "0"}, "1009": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP3", "path": "0"}, "1010": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "ISZERO", "path": "0"}, "1011": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "ISZERO", "path": "0"}, "1012": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP3", "path": "0"}, "1013": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP1", "path": "0"}, "1014": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP3", "path": "0"}, "1015": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "OR", "path": "0"}, "1016": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP1", "path": "0"}, "1017": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SWAP2", "path": "0"}, "1018": {"fn": "Trust.addBeneficiary", "offset": [734, 874], "op": "SSTORE", "path": "0"}, "1019": {"op": "POP"}, "1020": {"fn": "Trust.addBeneficiary", "jump": "o", "offset": [326, 881], "op": "JUMP", "path": "0"}, "1021": {"op": "JUMPDEST"}, "1022": {"op": "DUP1"}, "1023": {"op": "CALLDATALOAD"}, "1024": {"op": "PUSH1", "value": "0x1"}, "1026": {"op": "PUSH1", "value": "0x1"}, "1028": {"op": "PUSH1", "value": "0xA0"}, "1030": {"op": "SHL"}, "1031": {"op": "SUB"}, "1032": {"op": "DUP2"}, "1033": {"op": "AND"}, "1034": {"op": "DUP2"}, "1035": {"op": "EQ"}, "1036": {"op": "PUSH2", "value": "0x414"}, "1039": {"op": "JUMPI"}, "1040": {"op": "PUSH1", "value": "0x0"}, "1042": {"op": "DUP1"}, "1043": {"op": "REVERT"}, "1044": {"op": "JUMPDEST"}, "1045": {"op": "SWAP2"}, "1046": {"op": "SWAP1"}, "1047": {"op": "POP"}, "1048": {"jump": "o", "op": "JUMP"}, "1049": {"op": "JUMPDEST"}, "1050": {"op": "PUSH1", "value": "0x0"}, "1052": {"op": "PUSH1", "value": "0x20"}, "1054": {"op": "DUP3"}, "1055": {"op": "DUP5"}, "1056": {"op": "SUB"}, "1057": {"op": "SLT"}, "1058": {"op": "ISZERO"}, "1059": {"op": "PUSH2", "value": "0x42B"}, "1062": {"op": "JUMPI"}, "1063": {"op": "PUSH1", "value": "0x0"}, "1065": {"op": "DUP1"}, "1066": {"op": "REVERT"}, "1067": {"op": "JUMPDEST"}, "1068": {"op": "PUSH2", "value": "0x434"}, "1071": {"op": "DUP3"}, "1072": {"op": "PUSH2", "value": "0x3FD"}, "1075": {"jump": "i", "op": "JUMP"}, "1076": {"op": "JUMPDEST"}, "1077": {"op": "SWAP4"}, "1078": {"op": "SWAP3"}, "1079": {"op": "POP"}, "1080": {"op": "POP"}, "1081": {"op": "POP"}, "1082": {"jump": "o", "op": "JUMP"}, "1083": {"op": "JUMPDEST"}, "1084": {"op": "PUSH1", "value": "0x0"}, "1086": {"op": "DUP1"}, "1087": {"op": "PUSH1", "value": "0x40"}, "1089": {"op": "DUP4"}, "1090": {"op": "DUP6"}, "1091": {"op": "SUB"}, "1092": {"op": "SLT"}, "1093": {"op": "ISZERO"}, "1094": {"op": "PUSH2", "value": "0x44E"}, "1097": {"op": "JUMPI"}, "1098": {"op": "PUSH1", "value": "0x0"}, "1100": {"op": "DUP1"}, "1101": {"op": "REVERT"}, "1102": {"op": "JUMPDEST"}, "1103": {"op": "PUSH2", "value": "0x457"}, "1106": {"op": "DUP4"}, "1107": {"op": "PUSH2", "value": "0x3FD"}, "1110": {"jump": "i", "op": "JUMP"}, "1111": {"op": "JUMPDEST"}, "1112": {"op": "SWAP5"}, "1113": {"op": "PUSH1", "value": "0x20"}, "1115": {"op": "SWAP4"}, "1116": {"op": "SWAP1"}, "1117": {"op": "SWAP4"}, "1118": {"op": "ADD"}, "1119": {"op": "CALLDATALOAD"}, "1120": {"op": "SWAP4"}, "1121": {"op": "POP"}, "1122": {"op": "POP"}, "1123": {"op": "POP"}, "1124": {"jump": "o", "op": "JUMP"}, "1125": {"op": "JUMPDEST"}, "1126": {"op": "PUSH1", "value": "0x0"}, "1128": {"op": "DUP3"}, "1129": {"op": "NOT"}, "1130": {"op": "DUP3"}, "1131": {"op": "GT"}, "1132": {"op": "ISZERO"}, "1133": {"op": "PUSH2", "value": "0x486"}, "1136": {"op": "JUMPI"}, "1137": {"op": "PUSH4", "value": "0x4E487B71"}, "1142": {"op": "PUSH1", "value": "0xE0"}, "1144": {"op": "SHL"}, "1145": {"op": "PUSH1", "value": "0x0"}, "1147": {"op": "MSTORE"}, "1148": {"op": "PUSH1", "value": "0x11"}, "1150": {"op": "PUSH1", "value": "0x4"}, "1152": {"op": "MSTORE"}, "1153": {"op": "PUSH1", "value": "0x24"}, "1155": {"op": "PUSH1", "value": "0x0"}, "1157": {"op": "REVERT"}, "1158": {"op": "JUMPDEST"}, "1159": {"op": "POP"}, "1160": {"op": "ADD"}, "1161": {"op": "SWAP1"}, "1162": {"jump": "o", "op": "JUMP"}}, "sha1": "79b26f8c2a44b52ef3202744f0714c7b3d52f9e7", "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract Trust {\n    struct Beneficiary {\n        uint256 amount;\n        uint256 releaseDate;\n        bool paid;\n    }\n    mapping(address => Beneficiary) public beneficiaries;\n    address public grantor;\n\n    constructor() {\n        grantor = msg.sender;\n    }\n\n    function addBeneficiary(address beneficiary, uint256 timeUntilRelease)\n        external\n        payable\n    {\n        require(\n            msg.sender == grantor,\n            \"Only the grantor of this trust can add a beneficiary!\"\n        );\n        require(\n            beneficiaries[beneficiary].amount == 0,\n            \"You've already added this beneficiary...use a different address!\"\n        );\n        beneficiaries[beneficiary] = Beneficiary(\n            msg.value,\n            block.timestamp + timeUntilRelease,\n            false\n        );\n    }\n\n    function withdrawFunds() external {\n        Beneficiary storage beneficiary = beneficiaries[msg.sender];\n        require(\n            beneficiary.releaseDate <= block.timestamp,\n            \"You can't withdraw until your release date\"\n        );\n        require(\n            beneficiary.amount > 0,\n            \"Only a beneficiary can withdraw funds from this trust\"\n        );\n        require(\n            beneficiary.paid == false,\n            \"You've already withdrew your funds!\"\n        );\n        beneficiary.paid = true;\n        payable(msg.sender).transfer(beneficiary.amount);\n    }\n}\n", "sourceMap": "58:1422:0:-:0;;;269:51;;;;;;;;;-1:-1:-1;293:7:0;:20;;-1:-1:-1;;;;;;293:20:0;303:10;293:20;;;58:1422;;;;;;", "sourcePath": "contracts/Trust.sol", "type": "contract", "deployment": {"address": "0x339B281eF52db081b83Ea116df3B799F3B5738A2", "chainid": "42", "blockHeight": 30808764}}